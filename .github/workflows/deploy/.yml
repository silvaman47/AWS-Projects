name: Deploy PHP App
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: php-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > vockey.pem
          chmod 400 vockey.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$EC2_HOST << 'EOF'
            aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 313963153763.dkr.ecr.us-west-2.amazonaws.com
            docker pull 313963153763.dkr.ecr.us-west-2.amazonaws.com/my-php-app:latest
            docker stop $(docker ps -q) || true
            docker run -d -p 80:80 313963153763.dkr.ecr.us-west-2.amazonaws.com/my-php-app:latest
          EOF
